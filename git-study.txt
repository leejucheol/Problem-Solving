echo "# ww" >> README.md
"README.md" 파일을 생성하거나, 파일이 이미 존재할 경우 파일의 맨 끝에 # ww라는 내용을 추가한다.
echo 명령어는 문자열을 출력하는 명령어이며, >> 연산자는 기존 파일에 덧붙이기(append) 모드를 의미한다.
결과적으로 "README.md" 파일이 생성되고, 그 안에는 다음과 같은 내용이 들어간다.
# ww - 이 내용이 들어간다. 

git init
현재 작업 디렉토리를 새로운 Git 저장소로 초기화한다.
이 명령어를 실행하면 숨김 폴더인 .git/이 생성되며, Git이 버전 관리를 수행할 준비를 하게 된다.
.git/ 폴더 안에는 Git이 사용하는 데이터베이스(예: 커밋 기록, 브랜치 정보 등)가 저장된다.

git add README.md
"README.md" 파일을 Git 스테이징 영역(staging area)에 추가한다.
Git은 기본적으로 파일을 바로 커밋하지 않고, 먼저 '스테이징 영역'에 추가한 뒤 커밋을 진행한다.
이 명령어를 통해 README.md 파일이 첫 번째 커밋에 포함될 준비가 완료된다.

git commit -m "first commit"
스테이징 영역에 있는 파일들을 하나의 커밋으로 기록한다.
-m 옵션은 커밋 메시지를 직접 입력하는 옵션이며, "first commit"은 이번 커밋의 메시지로 사용된다.
이때 커밋은 고유한 SHA-1 해시값으로 식별되며, 저장소의 최초 스냅샷(snapshot)이 만들어진다.

git branch -M main
현재 활성화된 브랜치의 이름을 main으로 변경한다.
기존 Git은 기본 브랜치 이름이 master였으나, 최근에는 main을 기본 브랜치 이름으로 많이 사용한다.
-M 옵션은 강제로 이름을 변경하며, 이미 main이라는 이름의 브랜치가 있어도 덮어쓴다(force move).

git remote add origin https://github.com/leejucheol/ww.git
로컬 저장소에 '원격 저장소(remote repository)'를 연결한다.
origin이라는 이름으로 GitHub의 https://github.com/leejucheol/ww.git 저장소를 등록한다.
이후 origin이라는 별칭(alias)을 통해 해당 원격 저장소에 간편하게 접근할 수 있게 된다.

git push -u origin main
로컬 main 브랜치의 내용을 원격 저장소의 origin(즉, GitHub 저장소)의 main 브랜치에 업로드(push)한다.
-u 옵션은 로컬 브랜치와 원격 브랜치 간 추적 관계(tracking relationship)를 설정하는 옵션이다.
이를 통해 이후 git push, git pull을 별도의 브랜치 명시 없이 간편하게 수행할 수 있게 된다.